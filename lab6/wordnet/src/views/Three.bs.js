// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Repromise = require("@aantron/repromise/src/js/repromise.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Wordnet$Wordnet = require("../infrastructure/Wordnet.bs.js");
var MaterialUi_Typography = require("@jsiebern/bs-material-ui/src/MaterialUi_Typography.bs.js");
var TaskDescription$Wordnet = require("../components/TaskDescription.bs.js");
var MaterialUi_CircularProgress = require("@jsiebern/bs-material-ui/src/MaterialUi_CircularProgress.bs.js");

var boldText = Css.style(/* :: */[
      Css.fontWeight(/* bold */-1055161979),
      /* [] */0
    ]);

var graphContainer = Css.style(/* :: */[
      Css.height(Css.pct(100)),
      /* :: */[
        Css.width(Css.pct(90)),
        /* :: */[
          Css.display(/* flex */-1010954439),
          /* :: */[
            Css.justifyContent(/* center */98248149),
            /* [] */0
          ]
        ]
      ]
    ]);

var progressContainer = Css.style(/* :: */[
      Css.display(/* flex */-1010954439),
      /* :: */[
        Css.alignItems(/* center */98248149),
        /* :: */[
          Css.height(Css.rem(14)),
          /* [] */0
        ]
      ]
    ]);

var Styles = /* module */[
  /* boldText */boldText,
  /* graphContainer */graphContainer,
  /* progressContainer */progressContainer
];

function setup(param) {
  return Repromise.Rejectable[/* wait */6]((function (res) {
                console.log(Belt_List.toArray(res));
                return /* () */0;
              }), Wordnet$Wordnet.searchSenses("wypadek"));
}

var initialState = /* record */[/* ready */false];

var component = ReasonReact.reducerComponent("Three-Wordnet");

function make(param) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return setup(/* () */0);
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var description = ReasonReact.element(undefined, undefined, TaskDescription$Wordnet.make(ReasonReact.element(undefined, undefined, MaterialUi_Typography.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                "Find direct ",
                                React.createElement("b", undefined, " hyponyms "),
                                "of \"wypadek(1)\" noun"
                              ])), /* array */[]));
              var graph = React.createElement("div", undefined);
              return React.createElement("div", undefined, description, React.createElement("div", {
                              className: graphContainer
                            }, self[/* state */1][/* ready */0] ? graph : React.createElement("div", {
                                    className: progressContainer
                                  }, ReasonReact.element(undefined, undefined, MaterialUi_CircularProgress.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[])))));
            }),
          /* initialState */(function (param) {
              return initialState;
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              return /* NoUpdate */0;
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.Styles = Styles;
exports.setup = setup;
exports.initialState = initialState;
exports.component = component;
exports.make = make;
/* boldText Not a pure module */
