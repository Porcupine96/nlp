// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var React = require("react");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Router$Wordnet = require("../Router.bs.js");

var component = ReasonReact.statelessComponent("Link-Wordnet");

var link = Css.style(/* :: */[
      Css.textDecoration(/* none */-922086728),
      /* [] */0
    ]);

var Styles = {
  link: link
};

function make(route, children) {
  return {
          debugName: component.debugName,
          reactClassInternal: component.reactClassInternal,
          handedOffState: component.handedOffState,
          willReceiveProps: component.willReceiveProps,
          didMount: component.didMount,
          didUpdate: component.didUpdate,
          willUnmount: component.willUnmount,
          willUpdate: component.willUpdate,
          shouldUpdate: component.shouldUpdate,
          render: (function (param) {
              var onClick = function ($$event) {
                $$event.preventDefault();
                Belt_Option.map(route, Router$Wordnet.navigate);
                return /* () */0;
              };
              return React.createElement("a", {
                          className: link,
                          href: "#",
                          onClick: onClick
                        }, children);
            }),
          initialState: component.initialState,
          retainedProps: component.retainedProps,
          reducer: component.reducer,
          jsElementWrapped: component.jsElementWrapped
        };
}

exports.component = component;
exports.Styles = Styles;
exports.make = make;
/* component Not a pure module */
